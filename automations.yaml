
  # Set the initial theme for some assistant:
  # See here: https://www.home-assistant.io/integrations/frontend/#themes
  - alias: Set theme at startup
    trigger:
     - platform: homeassistant
       event: start
    action:
      service: frontend.set_theme
      data:
        name: midnight

  - alias: Update Available Notification
    trigger:
      - platform: state
        entity_id: binary_sensor.updater
        from: 'off'
        to: 'on'
    action:
      - service: notify.notify
        data_template:
          message: "Home Assistant {{ state_attr('binary_sensor.updater', 'newest_version') }} is available."

  - alias: Periodic slack status update of select sensor values
    trigger:
      platform: time_pattern
      minutes: "/30"     # every 30 minutes
    action:
      - service: notify.slack
        data_template:
          message: |-
            House power: {{ states('sensor.emoncms_home_power') }} W
            Balcony temperature: {{ states('sensor.balcony_temperature') }} oC
            Balcony humidity: {{ states('sensor.balcony_02_humidity_2') }} %
            Atm pressure: {{ states('sensor.balcony_02_pressure_2') }} %
            Home-office temperature: {{ states('sensor.balcony_02_temperature_bmp') }} oC

  - alias: Notify if EmonTx_A hasn't updated
    trigger:
      platform: template
      value_template: >
        {{ ( as_timestamp(now()) - state_attr('sensor.emoncms_node_emontx3_a_powera', 'LastUpdated') ) > 60 }}
    action:
      - service: notify.slack
        data:
          message: EmonTx_A hasn't updated in a while
          target:
          - "#alerts"

  - alias: Notify if EmonTx_B hasn't updated
    trigger:
      platform: template
      value_template: >
        {{ ( as_timestamp(now()) - state_attr('sensor.emoncms_node_emontx3_b_powerb', 'LastUpdated') ) > 60 }}
    action:
      - service: notify.slack
        data:
          message: EmonTx_B hasn't updated in a while
          target:
          - "#alerts"

  - alias: Notify if EmonTx_C hasn't updated
    trigger:
      platform: template
      value_template: >
        {{ ( as_timestamp(now()) - state_attr('sensor.emoncms_node_emontx3_c_powerc', 'LastUpdated') ) > 60 }}
    action:
      - service: notify.slack
        data:
          message: EmonTx_C hasn't updated in a while
          target:
          - "#alerts"
