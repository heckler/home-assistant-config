homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret home_latitude
  longitude: !secret home_longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret home_elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Sao_Paulo
  # Customization file
  customize: !include customize.yaml

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:


# load themes from a subfolder containing configs:
frontend:
   #themes: !include_dir_merge_named themes/


# Show the introduction message on startup.
# introduction:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123


# ----------------------------------------------------------------------------------
# Recorder configuration - limit which entities have history preserved
# ----------------------------------------------------------------------------------
recorder:
  auto_purge: true
  purge_keep_days: 14
  commit_interval: 30
  include:
    entities:
      - sensor.balcony_humidity
      - sensor.balcony_temperature
      - sensor.emoncms_home_power
      - sensor.emoncms_home_power_kwh
      - sensor.emoncms_node_emontx3_a_powera
      - sensor.emoncms_node_emontx3_a_powera_kwh
      - sensor.emoncms_node_emontx3_a_vrms
      - sensor.emoncms_node_emontx3_b_powerb
      - sensor.emoncms_node_emontx3_b_powerb_kwh
      - sensor.emoncms_node_emontx3_b_vrms
      - sensor.emoncms_node_emontx3_c_powerc
      - sensor.emoncms_node_emontx3_c_powerc_kwh
      - sensor.emoncms_node_emontx3_c_vrms
      - sensor.nh_to_chacara
      - sensor.nh_to_poa
      - sensor.poa_to_nh
      - sensor.speedtest_ping
      - sensor.speedtest_upload
      - sensor.speedtest_download
      - sensor.brazil_coronavirus_deaths
      - sensor.brazil_coronavirus_current
      - sensor.freezer_internal_temperature
      - sensor.freezer_external_temperature
      - sensor.fridge_main_temperature
      - sensor.fridge_freezer_temperature
      - sensor.memory_use_percent
      - light.wakeup_light_01r
      - light.wakeup_light_02g
      - switch.irrigation_pump_relay
      - switch.fireplace_light_relay
      - sensor.problem_check


# ----------------------------------------------------------------------------------
# InfluxDB configuration
# ----------------------------------------------------------------------------------
influxdb:
  host: a0d7b954-influxdb
  port: 8086
  database: homeassistant
  username: homeassistant
  password: !secret influxdb_password
  max_retries: 3
  default_measurement: state
  include:
    entities:
      - sensor.balcony_humidity
      - sensor.balcony_temperature
      - sensor.emoncms_home_power
      - sensor.emoncms_home_power_kwh
      - sensor.emoncms_node_emontx3_a_powera
      - sensor.emoncms_node_emontx3_a_powera_kwh
      - sensor.emoncms_node_emontx3_a_vrms
      - sensor.emoncms_node_emontx3_b_powerb
      - sensor.emoncms_node_emontx3_b_powerb_kwh
      - sensor.emoncms_node_emontx3_b_vrms
      - sensor.emoncms_node_emontx3_c_powerc
      - sensor.emoncms_node_emontx3_c_powerc_kwh
      - sensor.emoncms_node_emontx3_c_vrms
      - sensor.nh_to_chacara
      - sensor.nh_to_poa
      - sensor.poa_to_nh
      - sensor.speedtest_ping
      - sensor.speedtest_upload
      - sensor.speedtest_download
      - sensor.brazil_coronavirus_deaths
      - sensor.brazil_coronavirus_current
      - sensor.balcony_02_pressure
      - sensor.freezer_internal_temperature
      - sensor.freezer_external_temperature
      - sensor.fridge_main_temperature
      - sensor.fridge_freezer_temperature
  component_config_glob:
    sensor.*humidity:
      override_measurement: humidity
    sensor.*temperature:
      override_measurement: temperature
    sensor.*pressure:
      override_measurement: pressure



# weather platforms
weather:
  - platform: darksky
    name: weather-1
    api_key: !secret darksky_api_key
  

updater:
  include_used_components: true


# Transmission integration
#transmission:
#  host: !secret transmission_host
#  port: !secret transmission_port
#  username: !secret transmission_user
#  password: !secret transmission_passord


# ----------------------------------------------------------------------------------
# Sensors
# ----------------------------------------------------------------------------------
sensor:

  # waze travel time calculator
  # using a card from: https://github.com/ljmerza/travel-time-card
  - platform: waze_travel_time
    name: NH to POA
    origin: !secret home_coordinates
    destination: !secret work_coordinates
    region: 'EU'
  - platform: waze_travel_time
    name: POA to NH
    origin: !secret work_coordinates
    destination: !secret home_coordinates
    region: 'EU'
  - platform: waze_travel_time
    name: NH to Chacara
    origin: !secret home_coordinates
    destination: !secret chacara_coordinates
    region: 'EU'


  # System monitor: CPU, Memory and disk:
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: load_1m
      - type: swap_free
      - type: last_boot


  # CPU temperature, using commmand_line sensor:
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "Â°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'


  # ----------------------------------------------------------------------------------
  # EmonCMS sensor patform, CAH 2019-10-25
  # info:  https://www.home-assistant.io/integrations/emoncms
  # feeds: http://emonpi/emoncms/feed/list
  # ----------------------------------------------------------------------------------
  # faster update for the instant power and current feeds
  - platform: emoncms
    api_key: !secret emoncms_api_key
    url: !secret emoncms_url
    id: 1
    scan_interval: 10
    include_only_feed_id:
      - 2
      - 5
      - 3
      - 8
      - 4
      - 10
      - 17
  # slower update rate for the accumulated power feeds
  - platform: emoncms
    api_key: !secret emoncms_api_key
    url: !secret emoncms_url
    id: 1
    scan_interval: 60
    include_only_feed_id:
      - 6
      - 9
      - 11
      - 18


  # Date/Time sensor is used to allow automation templates which get triggered (re-evaluated) every minute
  - platform: time_date
    display_options:
    - "date_time_utc"
    - "date_time_iso"
    - "date"


# availability-base indication of problems with the sensors
  - platform: template
    sensors:
      problem_check:
        value_template: >-
          {{ 
             is_state('sensor.balcony_uptime', 'unavailable') or 
             is_state('sensor.balcony_02_uptime', 'unavailable') or 
             is_state('sensor.fireplace_light_uptime', 'unavailable') or 
             is_state('sensor.emoncms_node_emontx3_a_powera', 'unavailable') or 
             is_state('sensor.emoncms_node_emontx3_b_powerb', 'unavailable') or 
             is_state('sensor.emoncms_node_emontx3_c_powerc', 'unavailable') or 
             is_state('sensor.nh_to_poa', 'unavailable') or 
             is_state('sensor.speedtest_download', 'unavailable') or
             ( (now() - states.sensor.balcony_uptime.last_updated).total_seconds() > 600) or
             ( (now() - states.sensor.balcony_02_uptime.last_updated).total_seconds() > 600) or
             ( (now() - states.sensor.fireplace_light_uptime).total_seconds() > 600) or
             ( (now() - states.sensor.emoncms_node_emontx3_a_powera.last_updated).total_seconds() > 600) or
             ( (now() - states.sensor.emoncms_node_emontx3_b_powerb.last_updated).total_seconds() > 600) or
             ( (now() - states.sensor.emoncms_node_emontx3_c_powerc.last_updated).total_seconds() > 600) or
             ( (now() - states.sensor.nh_to_poa.last_updated).total_seconds() > 600) or
             ( (now() - states.sensor.speedtest_download.last_updated).total_seconds() > 4000)
          }}
      problem_status:
        value_template: >-
          {% if states.sensor.problem_check %}
             {% if states.sensor.problem_check.state == "True" %}
                Problem
             {% else %}
                Ok
             {% endif %}
          {% else %}
            N/A
          {% endif %}
        attribute_templates:
          Balcony_01: '{% if is_state("sensor.balcony_uptime", "unavailable") %} Unavailable {% else %} {% if ( (now() - states.sensor.balcony_uptime.last_updated).total_seconds() > 600) %} Stale {% else %} OK {% endif %} {% endif %}' 
          Balcony_02: '{% if is_state("sensor.balcony_02_uptime", "unavailable") %} Unavailable {% else %} {% if ( (now() - states.sensor.balcony_02_uptime.last_updated).total_seconds() > 600) %} Stale {% else %} OK {% endif %} {% endif %}'
          Fireplace_light: '{% if is_state("sensor.fireplace_light_uptime", "unavailable") %} Unavailable {% else %} {% if ( (now() - states.sensor.fireplace_light_uptime.last_updated).total_seconds() > 600) %} Stale {% else %} OK {% endif %} {% endif %}'
          Emoncms_power_A: '{% if is_state("sensor.emoncms_node_emontx3_a_powera", "unavailable") %} Unavailable {% else %} {% if ( (now() - states.sensor.emoncms_node_emontx3_a_powera.last_updated).total_seconds() > 600) %} Stale {% else %} OK {% endif %} {% endif %}'
          Emoncms_power_B: '{% if is_state("sensor.emoncms_node_emontx3_b_powerb", "unavailable") %} Unavailable {% else %} {% if ( (now() - states.sensor.emoncms_node_emontx3_b_powerb.last_updated).total_seconds() > 600) %} Stale {% else %} OK {% endif %} {% endif %}'
          Emoncms_power_C: '{% if is_state("sensor.emoncms_node_emontx3_c_powerc", "unavailable") %} Unavailable {% else %} {% if ( (now() - states.sensor.emoncms_node_emontx3_c_powerc.last_updated).total_seconds() > 600) %} Stale {% else %} OK {% endif %} {% endif %}'
          Waze: '{% if is_state("sensor.nh_to_poa", "unavailable") %} Unavailable {% else %} {% if ( (now() - states.sensor.nh_to_poa.last_updated).total_seconds() > 600) %} Stale {% else %} OK {% endif %} {% endif %}'
          Speedtest: '{% if is_state("sensor.speedtest_download", "unavailable") %} Unavailable {% else %} {% if ( (now() - states.sensor.speedtest_download.last_updated).total_seconds() > 4000) %} Stale {% else %} OK {% endif %} {% endif %}'
        friendly_name: Status


# Text to speech
tts:
  - platform: google_translate
    service_name: google_say


# ----------------------------------------------------------------------------------
# Telegram bot configuration
# ----------------------------------------------------------------------------------
telegram_bot:
  - platform: polling
    api_key: !secret telegram_api_key
    allowed_chat_ids:
      - !secret telegram_chat_id_1



# ----------------------------------------------------------------------------------
# Notification settings
# ----------------------------------------------------------------------------------
notify:

  - platform: telegram
    name: telegram
    chat_id: !secret telegram_chat_id_1


# ----------------------------------------------------------------------------------
# iFrame panel: extra links
# info: https://www.home-assistant.io/integrations/panel_iframe/
# ----------------------------------------------------------------------------------
panel_iframe:
  emon_cms:
    title: 'EmonCMS'
    url: 'http://emonpi.local/emoncms/dashboard/view/cah'


# load manually created automations from a subfolder:
# GUI- and blueprint- created automations are stored in confg/automations.yaml
# and a symlink under the automations folder allows it to be included:
# cd /root/config/automations
# ln -s ../automations.yaml gui_automations.yaml
automation: !include_dir_merge_list automations/


group: !include groups.yaml
script: !include scripts.yaml
scene: !include scenes.yaml


# ----------------------------------------------------------------------------------
# (experiment) Telegram alarm for high freezer temperature
# ----------------------------------------------------------------------------------

binary_sensor:
  - platform: template
    sensors:
      freezer_is_warm:
        value_template: "{{ float(states.sensor.freezer_internal_temperature.state) > -10.0 }}"
        friendly_name: "Freezer temperature too high"

alert:
  freezer_is_warm:
    name: "Freezer temperature too high"
    entity_id: binary_sensor.freezer_is_warm
    repeat: 30
    skip_first: true
    notifiers:
      - telegram
    data:
      message: Freezer temperature too high


